// Generated by SolidPython 1.0.5 on 2021-02-06 18:46:46


union() {
	translate(v = [0, 0, 10.0400000000]) {
		union() {
			translate(v = [0, -24.0000000000, 0]) {
				cube(center = true, size = [151.0000000000, 3, 20.0800000000]);
			}
			translate(v = [74.0000000000, 0, 0]) {
				cube(center = true, size = [3, 46.0000000000, 20.0800000000]);
			}
			rotate(a = 180) {
				translate(v = [0, -24.0000000000, 0]) {
					cube(center = true, size = [151.0000000000, 3, 20.0800000000]);
				}
			}
			rotate(a = 180) {
				translate(v = [74.0000000000, 0, 0]) {
					cube(center = true, size = [3, 46.0000000000, 20.0800000000]);
				}
			}
		}
	}
	translate(v = [0, 0, 17.0800000000]) {
		translate(v = [63.0000000000, 0, 0]) {
			translate(v = [0, -10.5000000000, 0]) {
				translate(v = [-0.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-21.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-42.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-63.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-84.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-105.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-126.0000000000, 0, 0]) {
					translate(v = [0, 0.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-0.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-21.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-42.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-63.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-84.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-105.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
				translate(v = [-126.0000000000, 0, 0]) {
					translate(v = [0, 21.0000000000, 0]) {
						union() {
							translate(v = [0, 7.7500000000, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									difference() {
										cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
										translate(v = [0, 0, -1.3000000000]) {
											translate(v = [0, -0.7500000000, 0]) {
												cube(center = true, size = [5, 1.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [-7.7500000000, 0, 0]) {
								translate(v = [0, 0, 1.5000000000]) {
									cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
								}
							}
							mirror(v = [0, 1, 0]) {
								mirror(v = [1, 0, 0]) {
									union() {
										translate(v = [0, 7.7500000000, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												difference() {
													cube(center = true, size = [17.0000000000, 1.5000000000, 3]);
													translate(v = [0, 0, -1.3000000000]) {
														translate(v = [0, -0.7500000000, 0]) {
															cube(center = true, size = [5, 1.0000000000, 3]);
														}
													}
												}
											}
										}
										translate(v = [-7.7500000000, 0, 0]) {
											translate(v = [0, 0, 1.5000000000]) {
												cube(center = true, size = [1.5000000000, 17.0000000000, 3]);
											}
										}
									}
								}
							}
							translate(v = [0, 0, 1.5000000000]) {
								translate(v = [0, 10.5000000000, 0]) {
									cube(center = true, size = [25.0000000000, 4, 3]);
								}
							}
							rotate(a = 90) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 180) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
							rotate(a = 270) {
								translate(v = [0, 0, 1.5000000000]) {
									translate(v = [0, 10.5000000000, 0]) {
										cube(center = true, size = [25.0000000000, 4, 3]);
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
#!/usr/bin/env python
import argparse
from os.path import abspath, dirname, join

from solid import *

from key_grid_tester import key_grid_tester


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Process some integers.")
    parser.add_argument(
        "length",
        metavar="LENGTH",
        type=int,
        help="the length of the tester, in number of keys",
    )
    parser.add_argument(
        "width",
        metavar="WIDTH",
        type=int,
        help="the width of the tester, in number of keys",
    )
    parser.add_argument(
        "-o",
        "--output",
        metavar="FILE",
        type=str,
        default=None,
        help="the name of the file to write to",
    )

    args = parser.parse_args()

    filepath = join(
        dirname(dirname(abspath(__file__))),
        "files",
        args.output or f"key_grid_tester_{args.length}x{args.width}.scad",
    )

    print(f"Writing {args.length}x{args.width} key tester frame to {filepath} . . .")

    scad_render_to_file(
        key_grid_tester(args.length, args.width),
        filepath=filepath,
        include_orig_code=True,
    )
 
 
************************************************/
